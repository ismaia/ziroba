#!/bin/bash

#the full directory name of the script no matter where it is being called from
SCRIPT_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
ROOT_DIR=`(cd $SCRIPT_DIR/.. && pwd)`
CSD_DIR=$ROOT_DIR/csd

#GPIOs
M1_EN="67"
M1_I1="68"
M1_I2="44"
M2_EN="26"
M2_I1="46"
M2_I2="65"


#init_pwm() {
#  if [ ! -f .pwm_started ]
#  then
#      echo "Initializing PWM devices..."
#      echo am33xx_pwm > /sys/devices/bone_capemgr.*/slots
#      sleep 2
#      echo bone_pwm_P9_14 >  /sys/devices/bone_capemgr.*/slots
#      echo "PWM1..."
#      sleep 2
#      echo bone_pwm_P9_16 >  /sys/devices/bone_capemgr.*/slots
#      echo "PWM2..."
#      touch .pwm_started
#      PWM1_DIR=`find  /sys/devices/ocp.3 -name 'pwm_test_P9_14.*'`
#      PWM2_DIR=`find  /sys/devices/ocp.3 -name 'pwm_test_P9_16.*'` 
#      PWM1=`basename $PWM1_DIR`
#      PWM2=`basename $PWM2_DIR`
#
#      echo "0" >  $PWM1_DIR/duty
#      echo "0" >  $PWM2_DIR/duty
#
#      echo "0" >  $PWM1_DIR/run
#      echo "0" >  $PWM2_DIR/run
#
#      echo "0" >  $PWM1_DIR/polarity
#      echo "0" >  $PWM2_DIR/polarity
#  fi
#}
#
#pwm_set_speed() {
#    PWM=$1
#    SPEED=$2
#    echo $SPEED > /sys/devices/ocp.3/$PWM/duty
#}
#
#pwm_max() {
#    PWM=$1
#    PERIOD=`cat /sys/devices/ocp.3/$PWM/period`
#    echo $PERIOD > /sys/devices/ocp.3/$PWM/duty
#}
#
#pwm_stop() {    
#    PWM=$1
#    echo "0" > /sys/devices/ocp.3/$PWM/run
#}
#
#pwm_start() {    
#    PWM=$1
#    echo "1" > /sys/devices/ocp.3/$PWM/run
#}
#
#show_help()
#{
#  echo "usage: robot_ctl [OPTIONS]"
#  echo "-i, --init    : turn robot on"
#  echo "-o, --off     : turn robot off"
#  echo "-f, --front   : go "
#  echo "-b, --back    : back"
#  echo "-l, --left    : turn left"
#  echo "-r, --right   : turn right"
#  echo "-s, --stop    : stop"
#  echo "-v, --veloc   : set velocity"
#  echo "-p, --pwm     : use PWM for velocity control"
#}
#
#
#init_pwm
#PWM1_DIR=`find  /sys/devices/ocp.3 -name 'pwm_test_P9_14.*'`
#PWM2_DIR=`find  /sys/devices/ocp.3 -name 'pwm_test_P9_16.*'` 
#PWM1=`basename $PWM1_DIR`
#PWM2=`basename $PWM2_DIR`
#
#
#
#args=$(getopt -o iofblrshv:p -l init,off,front,back,left,right,stop,veloc:,pwm,help  -- "$@")
#eval set -- "$args"
#
#while true ; do
#     case "$1" in          
#             -i|--init)
#                  if [ ! -f .pwm ]
#                  then
#                     ./gpio_ctl -e $M1_EN -e $M1_I1 -e $M1_I2 -e $M2_EN -e $M2_I1 -e $M2_I2
#                  else
#                     ./gpio_ctl -e $M1_I1 -e $M1_I2 -e $M2_I1 -e $M2_I2
#                      init_pwm
#                      pwm_max    $PWM1
#                      pwm_start  $PWM1
#                      pwm_max    $PWM2
#                      pwm_start  $PWM2
#                  fi
#                 ;;     
#             -f|--front)
#                 ./gpio_ctl -g$M1_I1 -v1 -g$M1_I2 -v0 -g$M2_I1 -v1 -g$M2_I2 -v0
#                 ;;                                    
#             -b|--back)
#                 ./gpio_ctl -g$M1_I1 -v0 -g$M1_I2 -v1 -g$M2_I1 -v0 -g$M2_I2 -v1
#                 ;;                                    
#             -l|--left)
#                 ./gpio_ctl -g$M1_I1 -v1 -g$M1_I2 -v0 -g$M2_I1 -v0 -g$M2_I2 -v1
#                 ;;                                                     
#             -r|--right)
#                 ./gpio_ctl -g$M1_I1 -v0 -g$M1_I2 -v1 -g$M2_I1 -v1 -g$M2_I2 -v0
#                 ;;                                    
#             -s|--stop)
#                 ./gpio_ctl -g$M1_I1 -v0 -g$M1_I2 -v0 -g$M2_I1 -v0 -g$M2_I2 -v0
#                 ;;                                                       
#             -o|--off)
#                  if [ -f .pwm ]
#                  then
#                     ./gpio_ctl -u$M1_I1 -u$M1_I2 -u$M2_I1 -u$M2_I2
#                      pwm_stop $PWM1
#                      pwm_stop $PWM2
#                  else
#                     ./gpio_ctl -g$M1_EN -v0 -g$M2_EN -v0
#                     ./gpio_ctl -u $M1_EN -u $M1_I1 -u $M1_I2 -u $M2_EN -u $M2_I1 -u $M2_I2
#                  fi
#                  rm -f .pwm
#                  rm -f .pwm_started
#                 ;;                                                       
#             -v|--veloc)
#                  SPEED=$2
#                  if [ -f .pwm ]
#                  then
#                      pwm_set_speed $PWM1 $SPEED
#                      pwm_set_speed $PWM2 $SPEED
#                      echo $PWM1
#                      echo $PWM2 
#                  fi
#                 ;;                                                       
#             -p|--pwm)
#                  USE_PWM="1"
#                  touch .pwm
#                 ;;                                                       
#             -h|--help)
#                 show_help                 
#                 exit 0
#                ;;                                
#             --)
#                 # No more options left.
#                 shift ;
#                 break;;
#     esac
#     shift
#done


show_help()
{
  echo "usage: robot_ctl [OPTIONS]"
  echo "-i, --init    : turn robot on"
  echo "-o, --off     : turn robot off"
  echo "-f, --front   : go "
  echo "-b, --back    : back"
  echo "-l, --left    : turn left"
  echo "-r, --right   : turn right"
  echo "-s, --stop    : stop"
  echo "-v, --veloc   : set velocity"
  echo "-p, --pwm     : use PWM for velocity control"
}

args=$(getopt -o iofblrshv:p -l init,off,front,back,left,right,stop,veloc:,pwm,help  -- "$@")
eval set -- "$args"

while true ; do
     case "$1" in          
             -i|--init)
                  ./gpio_ctl -e $M1_EN -e $M1_I1 -e $M1_I2 -e $M2_EN -e $M2_I1 -e $M2_I2
                  ./gpio_ctl -g$M1_EN -v1 -g$M2_EN -v1 
                  ./gpio_ctl -g$M1_I1 -v0 -g$M1_I2 -v0 -g$M2_I1 -v0 -g$M2_I2 -v0
                 ;;     
             -f|--front)
                 ./gpio_ctl -g$M1_I1 -v1 -g$M1_I2 -v0 -g$M2_I1 -v1 -g$M2_I2 -v0
                 ;;                                    
             -b|--back)
                 ./gpio_ctl -g$M1_I1 -v0 -g$M1_I2 -v1 -g$M2_I1 -v0 -g$M2_I2 -v1
                 ;;                                    
             -l|--left)
                 ./gpio_ctl -g$M1_I1 -v1 -g$M1_I2 -v0 -g$M2_I1 -v0 -g$M2_I2 -v1
                 ;;                                                     
             -r|--right)
                 ./gpio_ctl -g$M1_I1 -v0 -g$M1_I2 -v1 -g$M2_I1 -v1 -g$M2_I2 -v0
                 ;;                                    
             -s|--stop)
                 ./gpio_ctl -g$M1_I1 -v0 -g$M1_I2 -v0 -g$M2_I1 -v0 -g$M2_I2 -v0
                 ;;                                                       
             -o|--off)
                  ./gpio_ctl -g$M1_EN -v0 -g$M2_EN -v0
                  ./gpio_ctl -u $M1_EN -u $M1_I1 -u $M1_I2 -u $M2_EN -u $M2_I1 -u $M2_I2
                 ;;                                                       
             -v|--veloc)
                 ;;                                                       
             -p|--pwm)
                 ;;                                                       
             -h|--help)
                 show_help                 
                 exit 0
                ;;                                
             --)
                 # No more options left.
                 shift ;
                 break;;
     esac
     shift
done



